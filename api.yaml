openapi: 3.0.3
info:
  title: Avatara B2B API
  description: Avatara B2B API
  version: 0.0.1
  contact: {}
servers:
  - url: https://api-sandbox.avatara.id/b2b
    description: Sandbox
  - url: https://staging-b2b-api.avatara.id
    description: Staging avatara id
  
paths:
  /auth:
    post:
      tags:
        - Auth
      summary: Upsert User & Get Token
      description: Get or Create user and get token for authentication. JWT is returned in response body. The JWT can be used in HTTP header as bearer token
      security:
        - apiKeyAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - remote_id
              properties:
                username:
                  type: string
                  minLength: 3
                  maxLength: 25
                  description: alphanumeric and underscore
                  example: john_doe
                remote_id:
                  type: string
                  description: client user identifier
                  example: "12"
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    description: JWT for authentication in header
                    example: xxzxzxzxzxzxzxz
              example:
                token: xxzxzxzxzxzxzxz
  /users:
    get:
      tags:
        - Auth
      summary: Get profile
      description: Get user profile
      security:
        - apiKeyAuth: []
          bearerAuth: []
      responses:
        '200':
          description: OK
          headers:
            Content-Type:
              schema:
                type: string
                example: application/json
          content:
            application/json:
              schema:
                type: object
              example:
                data:
                  uid: <string>
                  username: <string>
                  remote_id: <string>
                  created_at: <string>
                  updated_at: <string>
                message: <string>
                status: <string>
  /stars:
    get:
      tags:
        - Star
      summary: Get all star
      operationId: getAllStar
      description: Get all star
      security:
        - apiKeyAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: string
            example: '1'
        - name: limit
          in: query
          schema:
            type: string
            example: '10'
        - name: category_id
          in: query
          schema:
            type: string
            example: '8'
        - name: catalog
          in: query
          schema:
            type: string
            example: weekly-popular
          description: featured,weekly-popular,new-release
      responses:
        '200':
          description: Get all star
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        banner_pic:
                          type: string
                          example: >-
                            https://img.icons8.com/?size=512&id=tZuAOUGm9AuS&format=png
                        biography:
                          type: string
                          example: contoh
                        category:
                          type: object
                          properties:
                            id:
                              type: number
                              example: 1
                            name:
                              type: string
                              example: Anime
                        description:
                          type: string
                          example: contoh
                        name:
                          type: string
                          example: contoh
                        profile_pic:
                          type: string
                          example: >-
                            https://img.icons8.com/?size=512&id=tZuAOUGm9AuS&format=png
                        social_link:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                                example: instagram
                              url:
                                type: string
                                example: https://instagram.com
                          example:
                            - name: instagram
                              url: https://instagram.com
                        uid:
                          type: string
                          example: 2SPdtY6dvcB9UM6Caqj40ouk0pd
                    example:
                      - banner_pic: >-
                          https://img.icons8.com/?size=512&id=tZuAOUGm9AuS&format=png
                        biography: contoh
                        category:
                          name: Anime
                        description: contoh
                        name: contoh
                        profile_pic: >-
                          https://img.icons8.com/?size=512&id=tZuAOUGm9AuS&format=png
                        social_link:
                          - name: instagram
                            url: https://instagram.com
                        uid: 2SPdtY6dvcB9UM6Caqj40ouk0pd
                  message:
                    type: string
                    example: Success Get Star Data
                  status:
                    type: string
                    example: success
              examples:
                Get all star:
                  value:
                    data:
                      - banner_pic: >-
                          https://img.icons8.com/?size=512&id=tZuAOUGm9AuS&format=png
                        biography: contoh
                        category:
                          id: 1
                          name: Anime
                        description: contoh
                        name: contoh
                        profile_pic: >-
                          https://img.icons8.com/?size=512&id=tZuAOUGm9AuS&format=png
                        social_link:
                          - name: instagram
                            url: https://instagram.com
                        uid: 2SPdtY6dvcB9UM6Caqj40ouk0pd
                    message: Success Get Star Data
                    status: success
      # security:
        # - {}
  /stars/search:
    get:
      tags:
        - Star
      summary: Search star
      description: Search star
      operationId: searchStar
      security:
        - apiKeyAuth: []
      parameters:
        - name: x-consumer-custom-id
          in: header
          schema:
            type: string
          example: tenantUID
        - name: x-consumer-username
          in: header
          schema:
            type: string
          example: tenantSlug
        - name: page
          in: query
          schema:
            type: string
            example: '1'
        - name: limit
          in: query
          schema:
            type: string
            example: '10'
        - name: category_id
          in: query
          schema:
            type: string
            example: '2'
        - name: status
          in: query
          schema:
            type: string
            example: inactive
        - name: q
          in: query
          schema:
            type: string
            example: bot
      responses:
        '200':
          description: Get all star
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        banner_pic:
                          type: string
                          example: >-
                            https://avatara-assets-staging.s3.ap-southeast-3.amazonaws.com/stars/2UVvFD03r5LYZ0imAf497TMeV7R/banner
                        category:
                          type: object
                          properties:
                            id:
                              type: number
                              example: 1
                            name:
                              type: string
                              example: test
                        name:
                          type: string
                          example: Rezi Bot
                        profile_pic:
                          type: string
                          example: >-
                            https://avatara-assets-staging.s3.ap-southeast-3.amazonaws.com/stars/2UVvFD03r5LYZ0imAf497TMeV7R/avatar
                        status:
                          type: string
                          example: active
                        uid:
                          type: string
                          example: 2UVvFD03r5LYZ0imAf497TMeV7R
                    example:
                      - banner_pic: >-
                          https://avatara-assets-staging.s3.ap-southeast-3.amazonaws.com/stars/2UVvFD03r5LYZ0imAf497TMeV7R/banner
                        category:
                          id: 1
                          name: test
                        name: Rezi Bot
                        profile_pic: >-
                          https://avatara-assets-staging.s3.ap-southeast-3.amazonaws.com/stars/2UVvFD03r5LYZ0imAf497TMeV7R/avatar
                        status: active
                        uid: 2UVvFD03r5LYZ0imAf497TMeV7R
                  message:
                    type: string
                    example: Success Get Star
                  status:
                    type: string
                    example: success
              examples:
                Get all star:
                  value:
                    data:
                      - banner_pic: >-
                          https://avatara-assets-staging.s3.ap-southeast-3.amazonaws.com/stars/2UVvFD03r5LYZ0imAf497TMeV7R/banner
                        category:
                          id: 1
                          name: test
                        name: Rezi Bot
                        profile_pic: >-
                          https://avatara-assets-staging.s3.ap-southeast-3.amazonaws.com/stars/2UVvFD03r5LYZ0imAf497TMeV7R/avatar
                        status: active
                        uid: 2UVvFD03r5LYZ0imAf497TMeV7R
                    message: Success Get Star
                    status: success
  /stars/{starUID}:
    get:
      tags:
        - Star
      summary: Get star by UID
      description: Get star by UID
      operationId: getStarByUid
      security:
        - apiKeyAuth: []
      parameters:
        - name: starUID
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/KSUID"
      responses:
        '200':
          description: Get star by UID
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    properties:
                      banner_pic:
                        type: string
                        example: >-
                          https://avatara-assets-staging.s3.ap-southeast-3.amazonaws.com/stars/2UVvFD03r5LYZ0imAf497TMeV7R/banner
                      biography:
                        type: string
                        example: aaa
                      bot:
                        type: object
                        properties:
                          greeting_msg:
                            type: string
                            example: a
                          reset_msg:
                            type: string
                            example: a
                          uid:
                            type: string
                            example: 2UVvFEv0Ry3apdkLPDDUIgIKsyU
                      category:
                        type: object
                        properties:
                          id:
                            type: number
                            example: 1
                          name:
                            type: string
                            example: test
                          status:
                            type: string
                            example: ''
                      chat_count:
                        type: number
                        example: 29
                      description:
                        type: string
                        example: aaa
                      name:
                        type: string
                        example: Rezi Bot
                      profile_pic:
                        type: string
                        example: >-
                          https://avatara-assets-staging.s3.ap-southeast-3.amazonaws.com/stars/2UVvFD03r5LYZ0imAf497TMeV7R/avatar
                      status:
                        type: string
                        example: active
                      uid:
                        type: string
                        example: 2UVvFD03r5LYZ0imAf497TMeV7R
                  message:
                    type: string
                    example: Success Get Star
                  status:
                    type: string
                    example: success
              examples:
                Get star by UID:
                  value:
                    data:
                      banner_pic: >-
                        https://avatara-assets-staging.s3.ap-southeast-3.amazonaws.com/stars/2UVvFD03r5LYZ0imAf497TMeV7R/banner
                      biography: aaa
                      bot:
                        greeting_msg: a
                        reset_msg: a
                        uid: 2UVvFEv0Ry3apdkLPDDUIgIKsyU
                      category:
                        id: 1
                        name: test
                        status: ''
                      chat_count: 29
                      description: aaa
                      name: Rezi Bot
                      profile_pic: >-
                        https://avatara-assets-staging.s3.ap-southeast-3.amazonaws.com/stars/2UVvFD03r5LYZ0imAf497TMeV7R/avatar
                      status: active
                      uid: 2UVvFD03r5LYZ0imAf497TMeV7R
                    message: Success Get Star
                    status: success
  /conversations:
    get:
      tags:
        - Conversation
      summary: Get My Conversation By star
      description: Get My Conversation By star
      operationId: getMyConversationByStar
      security:
        - apiKeyAuth: []
          bearerAuth: []
      parameters:
        - name: star_uid
          in: query
          schema:
            $ref: "#/components/schemas/KSUID"
      responses:
        '200':
          description: 'success get conversation'
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      required:
                        - uid
                        - star
                      properties:
                        uid:
                          $ref: "#/components/schemas/KSUID"
                        last_message_uid:
                          $ref: "#/components/schemas/KSUID"
                  message:
                    type: string
                    example: Success Get User Conversations
                  status:
                    type: string
                    example: success

      
    post:
      tags:
        - Conversation
      summary: Create conversation
      description: Create conversation
      operationId: createConversation
      security:
        - apiKeyAuth: []
          bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                star_uid:
                  $ref: "#/components/schemas/KSUID"
            examples:
              Create conversation:
                value:
                  star_uid: 2UVvFD03r5LYZ0imAf497TMeD2t
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - status
                  - data
                properties:
                  message:
                    type: string
                    example: success create conversation
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        uid:
                          $ref: "#/components/schemas/KSUID"
                        session_uid:
                          $ref: "#/components/schemas/KSUID"
                        messages:
                          type: array
                          items:
                            $ref: "#/components/schemas/ConversationMessage"
                  pagination:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                        example: eyJpZCI6IiIsImNyZWF0ZWRfYXQiOiIyMDI0LTAyLTAyVDAzOjAyOjQ0LjY0MVoiLCJwb2ludHNfbmV4dCI6dHJ1ZX0=
  /conversations/{conversation_uid}/reset:
    post:
      tags:
        - Conversation
      summary: Reset conversation
      description: Reset conversation
      operationId: resetConversation
      security:
        - apiKeyAuth: []
          bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ConversationUID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                star_uid:
                  type: string
                  example: 2UVvFD03r5LYZ0imAf497TMeD2t
            examples:
              Reset conversation:
                value:
                  star_uid: 2UVvFD03r5LYZ0imAf497TMeD2t
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - status
                  - data
                properties:
                  message:
                    type: string
                    example: success reset conversation
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        uid:
                          $ref: "#/components/schemas/KSUID"
                        session_uid:
                          $ref: "#/components/schemas/KSUID"
                        messages:
                          type: array
                          items:
                            $ref: "#/components/schemas/ConversationMessage"
                  pagination:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                        example: eyJpZCI6IiIsImNyZWF0ZWRfYXQiOiIyMDI0LTAyLTAyVDAzOjAyOjQ0LjY0MVoiLCJwb2ludHNfbmV4dCI6dHJ1ZX0=

  /conversations/{conversation_uid}/messages:
    get:
      tags:
        - Conversation
      summary: Get conversation message
      description: Get conversation message
      operationId: getConversationMessage
      security:
        - apiKeyAuth: []
          bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ConversationUID"
        - name: limit
          in: query
          schema:
            type: string
            example: '25'
        - name: page
          in: query
          schema:
            type: string
            example: '1'
          description: Not used when using sort_by and cursor
        - name: sort_by
          in: query
          schema:
            type: string
            example: created_at.desc
          description: 'Allowed value: created_at.desc'
        - name: cursor
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - status
                  - data
                properties:
                  message:
                    type: string
                    example: success get conversation messages
                  status:
                    type: string
                    example: success
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        uid:
                          $ref: "#/components/schemas/KSUID"
                        session_uid:
                          $ref: "#/components/schemas/KSUID"
                        messages:
                          type: array
                          items:
                            $ref: "#/components/schemas/ConversationMessage"
                  pagination:
                    type: object
                    properties:
                      next_cursor:
                        type: string
                        example: eyJpZCI6IiIsImNyZWF0ZWRfYXQiOiIyMDI0LTAyLTAyVDAzOjAyOjQ0LjY0MVoiLCJwb2ludHNfbmV4dCI6dHJ1ZX0=
  /metered/conversations/{conversation_uid}/chat/streaming:
    post:
      tags:
        - Conversation
      summary: Get Chat Reply Streaming
      description: Get Streaming reply to a conversation
      operationId: chat_stream_reply
      security:
        - apiKeyAuth: []
          bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ConversationUID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Haloo"
            examples:
              Create conversation:
                value:
                  message: "Haloo"
      responses:
        '200':
          description: OK
          content:
            text/plain:
              schema:
                type: string
              example: >+
                data: {"message_uid":null,"content":"This is warning message","message_type":"warning"}

                data:
                {"message_uid":"2UhpILLr5HbYOCYN4QTmCzsTR36","content":"","message_type":"ai"}

                data:
                {"message_uid":"2UhpILLr5HbYOCYN4QTmCzsTR36","content":"H","message_type":"ai"}

                data:
                {"message_uid":"2UhpILLr5HbYOCYN4QTmCzsTR36","content":"alo","message_type":"ai"}

                data: {"message_uid":"2UhpILLr5HbYOCYN4QTmCzsTR36","content":"Alice","message_type":"ai"}

                data:
                {"message_uid":"2UhpILLr5HbYOCYN4QTmCzsTR36","content":".","message_type":"ai"}

                data:
                {"message_uid":"2UhpILLr5HbYOCYN4QTmCzsTR36","content":"","message_type":"ai"}

                data: [DONE]
  /metered/conversations/{conversation_uid}/chat:
    post:
      tags:
        - Conversation
      summary: Get Chat Reply
      description: Get chat reply to a conversation
      operationId: chat_reply
      parameters:
        - $ref: "#/components/parameters/ConversationUID"
      security:
        - apiKeyAuth: []
          bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: "Haloo"
            examples:
              Create conversation:
                value:
                  message: "Haloo"
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - status
                  - data
                properties:
                  message:
                    type: string
                    example: success get conversation messages
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    properties:
                      message_uid:
                        $ref: "#/components/schemas/KSUID"
                      content:
                        type: string
                        example: "Haloo, John Doe! Ada apa nihh? 😊"
                      message_detail:
                        type: object
                        nullable: true
                        example: null

  /conversations/{conversation_uid}/voice-note:
    post:
      tags:
        - Conversation
      summary: get reply voice from text
      description: conversation text with voice
      operationId: get_reply_with_voice
      security:
        - apiKeyAuth: []
          bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ConversationUID"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  example: Haloo?
            examples:
              Streaming conversation:
                value:
                  message: Haloo?
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - status
                  - data
                properties:
                  message:
                    type: string
                    example: Success request voice note
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    nullable: true
                    example: null

  /conversations/{conversation_uid}/voice-note/audio:
    post:
      tags:
        - Conversation
      summary: conversation audio to audio
      description: conversation audio to audio
      operationId: get_reply_with_voice_from_audio
      security:
        - apiKeyAuth: []
          bearerAuth: []
      parameters:
        - $ref: "#/components/parameters/ConversationUID"
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  type: string
                  format: binary
                transcription:
                  type: string
                duration:
                  type: integer
                reply_type:
                  type: string
                  enum: [text, audio]
      responses:
        "200":
          description: Success
          content:
            application/json:
              schema:
                type: object
                required:
                  - message
                  - status
                  - data
                properties:
                  message:
                    type: string
                    example: Success request voice note
                  status:
                    type: string
                    example: success
                  data:
                    type: object
                    nullable: true
                    example: null

  /conversations/{conversation_uid}/messages/{msg_uid}/audio:
    get:
      tags:
        - Conversation
      summary: get audio from msg uid
      description: "Get audio file from msg uid. Notes: File response is not supported in browser. Please use CuRL to try the endpoint"
      operationId: get_audio_from_msg_uid
      parameters:
      - $ref: "#/components/parameters/ConversationUID"
      - name: msg_uid
        in: path
        required: true
        schema:
          $ref: "#/components/schemas/KSUID"
      responses:
        '200':
          description: ''
      security:
        - apiKeyAuth: []
          bearerAuth: []

components:
  schemas:
    DateISO:
      type: string
      description: "ISO 8601"
      example: "2011-06-20T14:48:00.000Z"
    KSUID:
      type: string
      example: 0ujsswThIGTUYm2K8FjOOfXtY1K
    ConversationMessage:
      type: object
      properties:
        uid:
          $ref: "#/components/schemas/KSUID"
        content:
          type: string
          example: Haloo?
        sender:
          type: string
          enum:
            - ai
            - human
          example: ai
        created_at:
          $ref: "#/components/schemas/DateISO"
        msg_type:
          type: string
          enum:
            - text
            - audio
            - gift
        message_detail:
          type: object
          properties:
            say:
              type: string
              example: Haloo?
            thought:
              type: string
              example: Aku senang sekali
            expr:
              type: string
              example: Terseyum
            action:
              type: string
              example: api_call
  parameters:
    ConversationUID:
      name: conversation_uid
      in: path
      description: Conversation UID
      required: true
      schema:
        $ref: "#/components/schemas/KSUID"
    StarUID:
      name: star_uid
      in: path
      description: Star UID
      required: true
      schema:
        $ref: "#/components/schemas/KSUID"
    Page:
      name: page
      in: query
      description: Page that should be returned
      required: false
      schema:
        type: number
        example: 1
        default: 1
    Limit:
      name: limit
      in: query
      description: Number of objects to return
      required: false
      schema:
        type: number
        example: 20
        default: 10
        maximum: 50
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
    apiKeyAuth:
      type: apiKey
      in: header
      name: apikey

tags:
  - name: Auth
  - name: Star
  - name: Conversation 